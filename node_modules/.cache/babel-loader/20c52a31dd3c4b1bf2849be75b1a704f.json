{"ast":null,"code":"var _jsxFileName = \"/home/admin-computer/Desktop/learningCode/reactLearning/online-resume/src/Component/nav-bar/js/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport '../css/NavBar.css';\nimport { ReactComponent as ExpanseLogo } from './expanse.svg';\nimport { ReactComponent as MainLogo } from './logo.svg';\nimport { ReactComponent as CloseButton } from './x_button.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBar = () => {\n  _s();\n\n  const [prevScrollPos, setPrevScrollPos] = useState(0);\n  const [navBarVisible, setNavBarVisible] = useState(true);\n  const [maxWidth, setMaxWidth] = useState(1000);\n  const temp_width = window.innerWidth;\n  const [navButtonVisile, setNavButtonVisile] = useState(temp_width > maxWidth / 2);\n  const [expanseButtonVisible, setExpanseButtonVisible] = useState(temp_width < maxWidth / 2);\n  const [expanseButtonPress, setExpanseButtonPress] = useState(false);\n\n  const onExpandButtonClick = () => {\n    setExpanseButtonPress(!expanseButtonPress);\n  };\n\n  const handleScroll = () => {\n    const currentPos = window.pageYOffset;\n    setNavBarVisible(prevScrollPos > currentPos || currentPos < 10);\n    setPrevScrollPos(currentPos);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [prevScrollPos, navBarVisible, handleScroll]);\n\n  const handleResize = () => {\n    let window_width = window.innerWidth;\n    if (window_width > maxWidth) setMaxWidth(window_width);\n\n    if (window_width < maxWidth / 2) {\n      setNavButtonVisile(false);\n      setExpanseButtonVisible(true);\n    } else {\n      setNavButtonVisile(true);\n      setExpanseButtonVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [maxWidth, navButtonVisile, handleResize]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav-bar\",\n    style: {\n      top: navBarVisible ? '0' : '-100px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"http://localhost:3000/\",\n          target: \"_top\",\n          children: /*#__PURE__*/_jsxDEV(MainLogo, {\n            className: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-button\",\n      style: {\n        display: navButtonVisile ? 'flex' : 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#aboutMe\",\n        id: \"navButton1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"01. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), \" About Me\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#work\",\n        id: \"navButton2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"02. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), \" Work\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#home\",\n        id: \"navButton3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"03. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), \" Somethings\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"resume-button\",\n        id: \"navButton4\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"%PUBLIC%/cv.pdf\",\n          target: \"_blank\",\n          children: \"Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extended-button\",\n      id: \"expanseButton\",\n      style: {\n        visibility: expanseButtonVisible ? 'visible' : 'hidden',\n        right: expanseButtonPress ? '0' : '-61vw'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close-button\",\n        onClick: () => {\n          onExpandButtonClick();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(CloseButton, {\n            className: \"logo\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#aboutMe\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"01.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), \"About Me\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#work\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"02.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), \" Work\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#home\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"03.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), \" Somethings\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expanse-button\",\n      style: {\n        display: expanseButtonVisible ? 'flex' : 'none'\n      },\n      onClick: () => {\n        onExpandButtonClick();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(ExpanseLogo, {\n          className: \"logo\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavBar, \"PitLunQrTfLsnnaSKRgQBneViFc=\");\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/home/admin-computer/Desktop/learningCode/reactLearning/online-resume/src/Component/nav-bar/js/NavBar.js"],"names":["React","useState","useEffect","ReactComponent","ExpanseLogo","MainLogo","CloseButton","NavBar","prevScrollPos","setPrevScrollPos","navBarVisible","setNavBarVisible","maxWidth","setMaxWidth","temp_width","window","innerWidth","navButtonVisile","setNavButtonVisile","expanseButtonVisible","setExpanseButtonVisible","expanseButtonPress","setExpanseButtonPress","onExpandButtonClick","handleScroll","currentPos","pageYOffset","addEventListener","removeEventListener","handleResize","window_width","top","display","visibility","right"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState ,useEffect} from \"react\";\nimport '../css/NavBar.css';\nimport {ReactComponent as ExpanseLogo} from './expanse.svg';\nimport {ReactComponent as MainLogo } from './logo.svg'; \nimport {ReactComponent as CloseButton} from './x_button.svg';\n\nconst NavBar = () =>{\n    const [prevScrollPos,setPrevScrollPos] = useState(0);\n    const [navBarVisible,setNavBarVisible] = useState(true);\n    const [maxWidth,setMaxWidth] = useState(1000);\n    const temp_width = window.innerWidth;\n    const [navButtonVisile,setNavButtonVisile]= useState(temp_width>maxWidth/2);\n    const [expanseButtonVisible,setExpanseButtonVisible]=useState(temp_width<maxWidth/2)\n    const [expanseButtonPress,setExpanseButtonPress]=useState(false);\n\n\n    const onExpandButtonClick=()=>{\n        setExpanseButtonPress(!expanseButtonPress);\n    }\n\n\n    const handleScroll=()=>{\n        const currentPos = window.pageYOffset;\n        setNavBarVisible((prevScrollPos>currentPos)||currentPos<10);\n        setPrevScrollPos(currentPos);\n    }\n    \n    useEffect(()=>{\n        window.addEventListener('scroll',handleScroll);\n\n        return ()=>window.removeEventListener('scroll',handleScroll);\n    },[prevScrollPos,navBarVisible,handleScroll]);    \n\n    const handleResize=()=>{\n        let window_width = window.innerWidth;\n        if(window_width>maxWidth)\n            setMaxWidth(window_width);\n        if(window_width<(maxWidth/2)){\n            setNavButtonVisile(false);\n            setExpanseButtonVisible(true);\n        }else{\n\n            setNavButtonVisile(true);\n            setExpanseButtonVisible(false );\n        }\n    }\n    \n\n    useEffect(()=>{\n        window.addEventListener('resize',handleResize);\n\n        return ()=>window.removeEventListener('resize',handleResize);\n    },[maxWidth,navButtonVisile,handleResize]); \n\n\n\n    return (\n        <div className ='nav-bar'  style={{top:navBarVisible ?'0':'-100px'}}>\n            <div className='logo-button'>\n                <button>\n                <a href='http://localhost:3000/' target='_top'>\n                <MainLogo className='logo'></MainLogo>\n                </a>\n                </button>\n            </div>\n            <div className='nav-button' style={{display:(navButtonVisile?'flex':'none')}}>\n                <a href=\"#aboutMe\" id=\"navButton1\">\n                    <span>01. </span> About Me\n                </a>\n                <a href=\"#work\" id=\"navButton2\">\n                    <span>02. </span> Work\n                </a>\n                <a href=\"#home\" id=\"navButton3\">\n                    <span>03. </span> Somethings\n                </a>\n                <button className='resume-button' id=\"navButton4\">\n                    <a href=\"%PUBLIC%/cv.pdf\" target='_blank'>\n                        Resume\n                    </a>\n                </button>\n            </div>\n            <div className=\"extended-button\" id=\"expanseButton\" style={{visibility:(expanseButtonVisible?'visible':'hidden'),right:(expanseButtonPress?'0':'-61vw')}}>\n                <div className=\"close-button\" onClick={()=>{onExpandButtonClick()}} >\n                    <button>\n                        <CloseButton className='logo'> </CloseButton>\n                    </button>\n                </div>\n                <a href=\"#aboutMe\">\n                    <span>01.</span>About Me\n                </a>\n                <a href=\"#work\">\n                    <span>02.</span> Work\n                </a>\n                <a href=\"#home\">\n                    <span>03.</span> Somethings\n                </a>\n            </div>\n            <div className='expanse-button'  style={{display:(expanseButtonVisible?'flex':'none')}} onClick={()=>{onExpandButtonClick()}}>\n                <button>\n                    <ExpanseLogo className='logo'> </ExpanseLogo>\n                </button>\n            </div>\n        </div>\n    );\n}\n\n\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}